{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/styles/constants.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","COLORS","GRADIENT","BORDER_RADIUS","lightWhite","lightGray","mediumGray","gray","babyBlue","blue","m","module","exports","require","default","StaticQuery","StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","Footer","siteTitle","react_default","style","padding","backgroundColor","display","alignItems","justifyContent","gridTemplateColumns","fontSize","color","fontWeight","textDecoration","href","Date","getFullYear","Layout","gatsby_browser_entry","footer","_755544856"],"mappings":"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","file":"component---src-pages-404-js-7f37225081f2533d7a8c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Page not Found :(</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","export const COLORS = {\n  lightWhite: \"#FBFDFF\",\n  lightGray: \"#F3F5F6\",\n  mediumGray: \"#B0B8BA\",\n  gray: \"#A0A4A6\",\n  babyBlue: \"#50CAF9\",\n  blue: \"#5368f1\",\n}\n\nexport const GRADIENT = `linear-gradient(to top right, ${COLORS.babyBlue}, ${\n  COLORS.blue\n})`\n\nexport const BORDER_RADIUS = \"10px\"\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { COLORS } from \"../styles/constants\"\n\nconst Footer = ({ siteTitle }) => (\n  <footer\n    style={{\n      padding: \"1rem\",\n      backgroundColor: COLORS.lightGray,\n    }}\n  >\n    <div\n      style={{\n        display: \"grid\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 240px))\",\n        padding: \"1rem 2rem\",\n        fontSize: \".85rem\",\n      }}\n    >\n      <div style={{ color: COLORS.blue, fontWeight: 700 }}>\n        <a\n          style={{ textDecoration: \"none\" }}\n          href=\"https://github.com/gillkyle/gatsby-starter-landing-page\"\n        >\n          Contact Us\n        </a>\n      </div>\n      <div style={{ color: COLORS.gray }}>\n        © {new Date().getFullYear()}\n        {` `}\n        {siteTitle}\n      </div>\n    </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Footer from \"./footer\"\nimport \"../styles/default.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n          style={{\n            padding: \"0 1rem\",\n          }}\n        >\n          <main>{children}</main>\n        </div>\n        <Footer siteTitle={data.site.siteMetadata.title} />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}